<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="javax.persistence.Entity"/>
<fullyQualifiedTypeName name="javax.persistence.Table"/>
<fullyQualifiedTypeName name="java.util.Date"/>
<fullyQualifiedTypeName name="javax.persistence.Id"/>
<fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
<fullyQualifiedTypeName name="javax.persistence.GenerationType"/>
<fullyQualifiedTypeName name="javax.persistence.Temporal"/>
<fullyQualifiedTypeName name="java.io.Serializable"/>
<fullyQualifiedTypeName name="org.springframework.data.repository.CrudRepository"/>
<fullyQualifiedTypeName name="org.springframework.transaction.annotation.Transactional"/>
<fullyQualifiedTypeName name="com.example.demo.models.dao.ProductoDao"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="com.example.demo.models.service.IProductoService"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="com.example.demo.models.entity.Producto"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker"/>
<fullyQualifiedTypeName name="com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand"/>
<fullyQualifiedTypeName name="com.formacionbdi.springboot.app.item.models.Producto"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.EnableZuulServer"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.EnableZuulProxy"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
<fullyQualifiedTypeName name="com.netflix.zuul.ZuulFilter"/>
<fullyQualifiedTypeName name="com.netflix.zuul.context.RequestContext"/>
<fullyQualifiedTypeName name="javax.servlet.http.HttpServletRequest"/>
<fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
<fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
<fullyQualifiedTypeName name="java.util.Map"/>
<fullyQualifiedTypeName name="java.util.HashMap"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
<fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
<fullyQualifiedTypeName name="org.slf4j.Logger"/>
<fullyQualifiedTypeName name="org.omg.CORBA.Environment"/>
<fullyQualifiedTypeName name="org.springframework.core.env.Environment"/>
<fullyQualifiedTypeName name="org.springframework.cloud.context.config.annotation.RefreshScope"/>
</qualifiedTypeNameHistroy>
